// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x7b\x73\xdb\x46\x92\xff\x5b\xfe\x14\x1d\x9c\xbd\x24\xcf\x02\x40\x49\xb6\x57\x47\x01\x4c\x79\xbd\xd9\x3d\x5f\xdd\x26\xa9\xd8\xb9\xbb\x54\x36\x75\x35\x00\x9a\xc4\x58\x83\x19\x64\x66\x40\x8a\x51\xf1\xbb\x5f\xf5\x0c\x00\x82\x0f\x29\xf6\xda\x57\xb5\xfe\x43\x06\xe6\xd1\xdd\xd3\xfd\xeb\xe9\x07\x91\x7c\xf5\xe7\xef\xde\xbc\xff\xe9\xfb\x6f\xa0\xb4\x95\x98\x3f\x49\xe8\x3f\x10\x4c\x2e\xd3\x00\x65\x30\x7f\x72\x96\x94\xc8\x8a\xf9\x93\xb3\xb3\xa4\x42\xcb\x20\x2f\x99\x36\x68\xd3\xa0\xb1\x8b\xf0\x3a\xd8\x4d\x94\xd6\xd6\x21\xfe\xda\xf0\x55\x1a\xfc\x4f\xf8\xe3\xeb\xf0\x8d\xaa\x6a\x66\x79\x26\x30\x80\x5c\x49\x8b\xd2\xa6\xc1\xdb\x6f\x52\x2c\x96\x38\xd8\x27\x59\x85\x69\xb0\xe2\xb8\xae\x95\xb6\x83\xa5\x6b\x5e\xd8\x32\x2d\x70\xc5\x73\x0c\xdd\xcb\x39\x70\xc9\x2d\x67\x22\x34\x39\x13\x98\x5e\x04\xf3\x27\x44\xc7\x72\x2b\x70\x7e\x7f\x1f\x7d\x8b\x76\xad\xf4\xed\x76\x3b\x83\xd7\x8d\x2d\x51\x5a\x9e\x33\x8b\x05\xfc\x85\x35\x39\xda\x24\xf6\x2b\xdd\x26\xc1\xe5\x2d\x94\x1a\x17\x69\x40\xa2\x9b\x59\x1c\xe7\x85\xfc\x60\xa2\x5c\xa8\xa6\x58\x08\xa6\x31\xca\x55\x15\xb3\x0f\xec\x2e\x16\x3c\x33\xb1\x5d\x73\x6b\x51\x87\x99\x52\xd6\x58\xcd\xea\xf8\x2a\xba\x8a\xfe\x18\xe7\xc6\xc4\xfd\x58\x54\x71\x19\xe5\xc6\x04\xa0\x51\xa4\x81\xb1\x1b\x81\xa6\x44\xb4\x01\xc4\xf3\x7f\x8c\xef\x42\x49\x1b\xb2\x35\x1a\x55\x61\xfc\x22\xfa\x63\x34\x75\x2c\x87\xc3\x8f\x73\x25\xb6\x26\xd7\xbc\xb6\x60\x74\xfe\xd1\x7c\x3f\xfc\xda\xa0\xde\xc4\x57\xd1\x45\x74\xd1\xbe\x38\x3e\x1f\x4c\x30\x4f\x62\x4f\x70\xfe\x59\xb4\x43\xa9\xec\x26\xbe\x8c\x5e\x44\x17\x71\xcd\xf2\x5b\xb6\xc4\xa2\xe3\x44\x53\x51\x37\xf8\xc5\xf8\x3e\x64\xc3\x0f\x87\x26\xfc\x12\xcc\x2a\x55\xa1\xb4\xd1\x07\x13\x5f\x46\x17\xd7\xd1\xb4\x1b\x38\xa6\xef\x18\x90\xd1\x88\xd5\x59\xb4\x42\x4d\xc8\x15\x61\x8e\xd2\xa2\x86\x7b\x1a\x3d\xab\xb8\x0c\x4b\xe4\xcb\xd2\xce\xe0\x62\x3a\x7d\x76\x73\x6a\x74\x55\xfa\xe1\x82\x9b\x5a\xb0\xcd\x0c\x16\x02\xef\xfc\x10\x13\x7c\x29\x43\x6e\xb1\x32\x33\xf0\x94\xdd\xc4\xd6\xf1\xac\xb5\x5a\x6a\x34\xa6\x65\x56\x2b\xc3\x2d\x57\x72\x46\x88\x62\x96\xaf\xf0\xd4\x5a\x53\x33\x79\xb4\x81\x65\x46\x89\xc6\xe2\x81\x20\x99\x50\xf9\xad\x1f\x73\xde\x3c\x3c\x44\xae\x84\xd2\x33\x58\x97\xbc\xdd\x06\x8e\x11\xd4\x1a\x5b\xf2\x50\xb3\xa2\xe0\x72\x39\x83\x57\x75\x7b\x1e\xa8\x98\x5e\x72\x39\x83\xe9\x6e\x4b\x12\x77\x6a\x4c\x62\x7f\x71\x3d\x39\x4b\x32\x55\x6c\x9c\x0d\x0b\xbe\x82\x5c\x30\x63\xd2\xe0\x40\xc5\xee\x42\xda\x5b\x40\xf7\x10\xe3\xb2\x9b\xda\x9b\xd3\x6a\x1d\x80\x63\x94\x06\x5e\x88\x30\x53\xd6\xaa\x6a\x06\x17\x24\x5e\xbb\xe5\x80\x9e\x08\xc5\x32\xbc\xb8\xec\x26\xcf\x92\xf2\xa2\x23\x62\xf1\xce\x86\xce\x3e\xbd\x65\x82\x79\xc2\xbb\xbd\x0b\x06\x0b\x16\x66\xcc\x96\x01\x30\xcd\x59\x58\xf2\xa2\x40\x99\x06\x56\x37\x48\x38\xe2\x73\x18\x5e\x7f\x0f\xdc\x7e\xe5\x45\x27\x57\x5c\xf0\x55\x7b\xac\xc1\xe3\xc1\x09\x1f\x3e\xc4\x35\xb4\x0f\x6a\xb1\x30\x68\xc3\xc1\x99\x06\x8b\xb9\xac\x1b\x1b\x2e\xb5\x6a\xea\x7e\xfe\x2c\x71\xa3\xc0\x8b\x34\x68\xb4\x08\xda\xeb\xdf\x3d\xda\x4d\xdd\xaa\x22\xe8\x0f\xae\x74\x15\x92\x25\xb4\x12\x01\xd4\x82\xe5\x58\x2a\x51\xa0\x4e\x83\x77\x2a\xe7\x4c\x80\xf4\x67\x86\x1f\x7f\xf8\x4f\x68\x4d\xc6\xe5\x12\x36\xaa\xd1\xf0\xed\x37\xff\xf5\x37\x60\x45\x41\x50\x8d\xa2\x28\x88\x77\x52\x38\xe0\x1e\xcb\x19\x66\x56\xee\x64\x3d\x4b\xb2\xc6\x5a\xd5\x2f\xcc\xac\x84\xcc\xca\xb0\xc0\x05\x6b\x84\x85\x42\xab\xba\x50\x6b\x19\x5a\xb5\x5c\x52\x98\xf3\x27\xf0\x9b\x02\x28\x98\x65\xed\x54\x1a\x74\x6b\x3b\x03\x32\x53\xab\xba\xa9\x5b\x13\xfa\x41\xbc\xab\x99\x2c\xb0\x20\x83\x0b\x83\xc1\xfc\xaf\x7c\x85\x50\x21\xbc\xfb\xe9\xdd\xd9\x21\x1a\x72\xa6\xd1\x86\x43\x92\x47\x98\x48\x62\x2f\x8a\x3f\x10\xb4\xff\x92\x46\x74\x94\xfa\x03\x54\x28\x1b\xd8\x7b\x0b\x35\x5d\x29\xc1\xfc\xfe\x5e\x33\xb9\x44\x78\xca\x8b\xbb\x73\x78\xca\x2a\xd5\x48\x0b\xb3\x14\xa2\xd7\xee\xd1\x6c\xb7\x7b\xd4\x01\x12\xc1\xe7\x09\x7b\x0c\xd9\xa0\x64\x2e\x78\x7e\x9b\x06\x96\xa3\x4e\xef\xef\x89\xf8\x76\x7b\x03\xf7\xf7\x7c\x01\x4f\xa3\x1f\x30\x67\xb5\xcd\x4b\xb6\xdd\x2e\x75\xf7\x1c\xe1\x1d\xe6\x8d\xc5\xf1\xe4\xfe\x1e\x85\xc1\xed\xd6\x34\x59\xc5\xed\xb8\xdb\x4e\xe3\xb2\xd8\x6e\x49\xe6\x56\xce\xed\x16\x62\x22\x2a\x0b\xbc\x83\xa7\xd1\xf7\xa8\xb9\x2a\x0c\xf8\xf5\x49\xcc\xe6\x49\x2c\xf8\xbc\xdd\xb7\xaf\xa4\xb8\x11\x3b\xb4\xc4\x04\x97\x1e\xe2\xce\x63\x9c\xa8\x43\x49\x4f\x38\xc0\x32\xec\xa5\x6f\xd1\x60\xb8\xc5\x5b\xdc\xa4\xc1\xfd\xfd\x70\x6f\x3b\x9b\x33\x21\x32\x46\x7a\xf1\x47\xeb\x37\xfd\x86\x84\xd2\x15\x37\x2e\x9b\x9a\x77\x12\xec\xc4\xfe\x48\x8f\x3e\xb8\xb3\xac\xaa\x67\x70\x75\x39\xb8\xb0\x4e\x39\xfb\xab\x03\x67\xbf\x3a\xb9\xb8\x66\x12\x05\xb8\xbf\xa1\xa9\x98\xe8\x9e\x5b\x5f\x19\x5c\x00\x87\x9b\x42\xba\x9e\x7b\xd1\xfa\x6b\x7e\x7a\x03\x6a\x85\x7a\x21\xd4\x7a\x06\xac\xb1\xea\x06\x2a\x76\xd7\x87\xba\xab\xe9\x74\x28\x37\x65\x81\x2c\x13\xe8\x2e\x16\x8d\xbf\x36\x68\xac\xe9\xaf\x11\x3f\xe5\xfe\xd2\x6d\x52\xa0\x34\x58\x1c\x68\x83\x38\x92\x6a\xdd\xaa\x81\xe9\x7b\x65\x9e\x94\x7d\xa1\x54\x1f\x3d\x86\x62\xb4\xa4\x07\x81\x2e\x98\x27\x56\xef\xd6\x9d\x25\xb6\xf8\xa4\xdb\x5f\x53\x76\xf7\xd0\xe5\xef\xef\x33\x3a\x7b\x8d\xa8\x7d\x6a\x41\x90\x05\xf7\x9a\xc4\xb6\xf8\x0c\xce\x04\xc2\x8c\x19\xfc\x18\xf6\x2e\xc8\xef\xd8\xbb\xd7\xcf\xe5\x5f\x22\xd3\x36\x43\x66\x3f\x46\x80\x45\x23\x8b\xc1\xf9\xdf\xfd\xf4\xee\x33\xb9\x37\x92\xaf\x50\x1b\x6e\x37\x1f\xcb\x1e\x8b\x1d\x7f\xff\xbe\x2f\x42\x12\x5b\xfd\x38\xd0\x86\x2f\x5f\xc8\xb3\x7f\x2f\x15\xb9\x9a\xff\xbb\x5a\x43\xa1\xd0\x80\x2d\xb9\x01\x0a\xaa\x5f\x27\x71\x79\xd5\x2f\xa9\xe7\xef\x69\xc2\x05\xd5\x85\xcb\x28\x80\x1b\xd0\x8d\x74\x01\x57\x49\xb0\x25\xee\x67\x21\x6d\x6c\x8e\xe0\xbd\xa2\x4c\x6e\x85\xd2\x42\xc5\x04\xcf\xb9\x6a\x0c\xb0\xdc\x2a\x6d\x60\xa1\x55\x05\x78\x57\xb2\xc6\x58\x22\x44\x57\x07\x5b\x31\x2e\x9c\x1f\x39\x73\x82\xd2\xc0\xf2\xbc\xa9\x1a\xca\x44\xe5\x12\x50\xaa\x66\x59\x92\x71\xc1\x2a\xf0\x21\x49\x28\xb9\xec\xa5\x31\x35\xab\x80\x59\xcb\xf2\x5b\x73\x0e\xdd\x7d\x00\x4c\x23\x58\x8e\x05\xed\xca\x55\x55\x29\x09\x57\xba\x80\x9a\x69\xbb\x01\xb3\x9f\x50\xb0\x3c\x77\xf1\x2d\x82\xd7\x72\xa3\x24\x42\xc9\x56\x4e\x3e\x78\xef\x6b\x08\x92\xea\x2f\x2c\xc7\x4c\xa9\x7e\x35\x54\x6c\xd3\xb1\x6b\x65\x5f\x73\x5b\x72\xaf\x9c\x1a\x75\x45\x5b\x0b\x10\xbc\xe2\xd6\x44\x49\x5c\xef\xee\xd2\x5d\x54\x16\x61\xa9\x34\xff\x8d\xb2\x19\x31\xbc\x38\xed\xc1\xb5\xd2\xdd\x8a\xce\xe4\x02\x17\x76\x06\x2f\xfc\xad\x78\x08\xe2\xb6\xec\x39\x85\xe0\x8e\xa6\x2b\x27\x29\xd4\xcc\xe0\xca\xe7\xb0\x3e\x85\x28\xec\x40\x82\xe2\x00\x67\x9e\xe9\xf5\x75\x7d\xd7\xcb\xd1\x27\xc2\xd3\x9e\x08\xd9\x7f\x5f\x29\x2b\xde\xab\xf1\x1c\x2a\x76\x8b\xc0\x20\x61\x07\x65\x71\x2b\xb4\x2b\xaa\xb8\x6b\x0a\xc4\x76\x8d\x68\xbf\x26\xbf\x4d\x7f\xf0\x04\xb9\x5c\x3e\xbb\x9c\x7a\x3c\xd2\x03\x91\x7f\x76\x39\xe5\xd2\xaa\x67\x97\xd3\xe9\xdd\xf4\x23\xff\x3d\xbb\x9c\x2a\xf9\xec\x72\x6a\x4b\x7c\x76\x39\x7d\x76\x79\x35\x44\xb2\x1f\xb1\x68\x88\x45\x87\xea\x00\x2c\xd3\x4b\xb4\x69\xf0\xbf\x2c\x53\x8d\x9d\x65\x82\xc9\xdb\x60\xee\x64\xa4\xe4\xc2\x99\xfe\x38\x13\x85\x9a\x19\xc2\x00\x89\xe8\x60\xd1\x76\x3c\x0c\x8c\x4d\xa3\xb5\x6a\x24\x05\x40\xa0\x43\x3a\x7f\x94\x23\x82\x15\x69\x62\x12\x25\x99\x8e\xe7\x6f\x54\xbd\x09\x1d\x11\xb7\xfd\x48\x6f\xa6\xa9\x6b\xa5\x6d\x34\xd4\x1f\xa3\x6a\x47\xa0\x89\xaf\xa7\x2f\xaf\x5f\x3d\x2a\xba\xa1\x5c\xda\xc9\xdf\x4b\xc8\x32\xb5\x42\xf0\x99\x7b\xa6\xee\x80\xc9\x02\x16\x5c\x23\xb0\x35\xdb\x7c\x95\xc4\x85\xab\xb3\x3e\x1f\xa6\x8b\xd6\x9d\xfe\xa9\x70\xda\xf9\xf8\x39\xd4\x4d\x26\xb8\x29\x81\x81\xc4\x35\x24\xc6\x6a\x25\x97\x73\x37\x9a\x53\xe1\xe9\x5e\xa1\x56\xc6\x3e\x64\x7a\xac\x32\x2c\x8a\x13\xc6\xff\x52\xb6\x5f\xaf\xd7\x51\xa7\x45\x67\xf8\x12\x45\x1d\xd3\x5d\xd7\x48\x6e\x37\xb1\xf7\x19\x25\xe3\xaf\x79\x91\x5e\x5e\x5f\xbe\x7a\x75\xf9\xe2\xdf\xae\x5f\xbe\xbc\xbc\x7e\xf1\xf2\x21\x54\xd0\x81\x3e\x13\x14\x3e\x5b\xfe\x56\x51\x5d\xda\xa7\xca\x1e\x2b\x5d\x8a\x46\xb1\xb8\xa0\x52\x43\x07\xff\x30\x7e\x1a\x49\xf9\x46\xc8\xc4\xc9\x54\xe1\x13\x10\xe4\x20\xf4\x88\x64\x9f\x09\xab\x0e\x3a\x84\x12\xd5\x58\x3a\x61\x57\xae\x73\x25\x7b\x28\x9d\x83\xe1\x55\x2d\x36\x90\xef\xac\x7e\x8c\xa9\x07\x0d\xf2\xbb\x90\xda\x37\x99\x07\x98\x8b\xf1\x95\x2a\x90\x82\xbb\x69\x4c\x8e\xb5\xeb\xe1\x52\xc8\xfc\xd3\xe6\x37\x26\x2d\x97\xd8\x85\xd6\x08\xbe\x93\x62\x03\x8d\x41\x58\x28\x0d\x05\x66\xcd\x72\xe9\xb2\x01\x0d\xb5\xe6\x2b\x66\xb1\x8b\xa7\xa6\x45\x44\x0f\x88\x41\xf1\x42\x89\x8d\x18\xe4\x19\x3f\xa9\x06\x72\x26\xc1\x6a\x96\xdf\x7a\x2f\x69\xb4\x26\x2f\xa9\xd1\x9f\xa6\x8f\xe8\x19\x0a\xb5\x76\x4b\xfc\xb9\x17\x1c\x85\x0b\xef\x06\x11\x4a\xb5\x86\xaa\xc9\x9d\x23\x52\xf8\x76\x87\x58\x33\x6e\xa1\x91\x96\x0b\xaf\x4b\xdb\x68\x49\xc9\x00\xee\x85\xe3\xa3\xf2\x2e\xc1\x6a\xfe\xbe\x44\xaf\xfa\x41\xde\xd3\x97\x65\xa0\xf1\x8d\x5f\x0c\xb5\x56\x16\x73\x32\x25\xb0\x25\xe3\xd2\x90\x3d\x5c\xb8\xc7\xea\x23\xca\xb6\xfe\xa9\x7d\xd8\x75\x1f\xdd\x74\x1c\xc3\x5f\x85\xca\x98\x80\x15\x61\x3c\x13\x94\xb2\x29\x28\x15\x1d\x7c\xa0\x2b\x63\x99\x6d\x0c\xa8\x85\x1b\xf5\x11\x92\xf6\xaf\x98\x26\xfb\x61\x55\x5b\x48\xdb\xde\x19\x8d\x19\xd4\xab\xb6\x23\x48\xaf\x54\x9a\xef\xcd\xf7\x3a\x4f\xe1\xe7\x5f\x6e\x9e\xb4\xa2\xfc\x19\x17\x0e\x10\x84\x6c\x7f\x64\x5b\x32\x0b\xb9\x46\x66\xd1\x40\x2e\x94\x69\xb4\x97\xb0\xd0\xaa\x06\x92\xb2\xa3\xd4\x51\xa6\x89\xda\x71\xeb\x88\x8c\x4b\x66\xca\x49\xdb\xfa\xd3\xe8\x6c\xd4\xcf\x75\xe3\x67\x84\xb9\x31\x11\xe0\xe9\xf4\x06\x78\xd2\xd1\x8d\x04\xca\xa5\x2d\x6f\x80\x3f\x7f\xde\x2f\x3e\xe3\x0b\x18\x77\x2b\x7e\xe6\xbf\x44\xf6\x2e\x22\x2e\x90\xa6\x30\xe4\xe6\x18\xb6\x74\x4c\x2d\x78\x8e\x63\x7e\x0e\x17\x93\x9b\x6e\x36\xd3\xc8\x6e\xbb\xb7\xd6\x8e\xfe\x3f\xf7\x77\x7b\xb3\xaf\x19\xa7\xfc\x3d\xdd\xf8\xe2\xde\x00\x83\x25\x37\x16\x1a\x2d\xa0\xf5\x60\x6f\x82\xde\x20\x6e\xdd\x50\x2b\x47\xa8\x6c\x1f\x5a\x4c\x75\x47\xf0\x64\x22\x83\xb2\x18\xff\xc7\xbb\xef\xbe\x8d\x8c\xd5\x5c\x2e\xf9\x62\x33\xbe\x6f\xb4\x98\xc1\xd3\x71\xf0\x2f\x8d\x16\xc1\xe4\xe7\xe9\x2f\xd1\x8a\x89\x06\xcf\x9d\xbd\x67\xee\xef\x11\x97\x73\x68\x1f\x67\xb0\xcf\x70\x3b\x99\xdc\x9c\x6e\x84\x0c\xfa\x36\x1a\x0d\xda\x31\x2d\xec\x81\x7f\xa8\x23\x06\x15\xda\x52\x39\xc7\xd5\x98\x2b\x29\x31\xb7\xd0\xd4\x4a\xb6\x2a\x01\xa1\x8c\xd9\x01\xb1\x5b\x91\x1e\x83\xa2\x5d\x9f\xba\x10\xfd\xdf\x98\xbd\x53\xf9\x2d\xda\xf1\x78\xbc\xe6\xb2\x50\xeb\x48\x28\x7f\xc9\x46\xe4\xa4\x2a\x57\x02\xd2\x34\x85\x36\x7e\x06\x13\xf8\x1a\x82\xb5\xa1\x48\x1a\xc0\x8c\x1e\xe9\x69\x02\xcf\xe1\x70\x7b\x49\x51\xfe\x39\x04\x31\xab\x79\x30\xf1\xee\xd0\x29\x5e\xc9\x0a\x8d\x61\x4b\x1c\x0a\xe8\xca\x9f\x1e\x64\x74\x8e\xca\x2c\x21\x05\x67\xa0\x9a\x69\x83\x7e\x49\x44\xe5\x76\x87\x36\xc2\xac\x5b\x96\xa6\x20\x1b\x21\x76\x20\xf5\x4e\x71\xd3\xc1\x6f\x6f\x79\xe4\xa3\xcc\x57\x69\x0a\x54\x7e\x92\x8a\x8b\xdd\x4e\x32\xbe\xaf\x92\x27\x11\x45\x85\xdd\x8e\xc9\xcd\x10\xcd\x7b\xd4\xb0\xf8\x3d\x72\x58\x1c\xd2\xc3\xe2\x01\x82\xae\x29\xf1\x18\x3d\xdf\xc4\x18\x90\x73\x03\x0f\x50\x93\x4d\x95\xa1\x7e\x8c\x9c\x6f\x4a\xb4\xe4\x9c\xaa\xdf\x4a\x3b\xd8\x7b\x0e\x17\xaf\x26\x0f\x50\x47\xad\xd5\x83\xc4\xa5\xb2\x9b\xf1\xbd\x60\x1b\xca\x96\x60\x64\x55\xfd\xc6\xb5\x11\x46\xe7\x2e\xde\xce\xa0\xa7\x70\xee\x7a\xc3\x33\x18\xb9\x37\x9a\xe7\x15\xba\x5d\x2f\xa7\xd3\xe9\x39\x74\xbf\xa8\xfc\x89\x91\x13\xea\x06\xb7\x0f\xc8\x63\x9a\x3c\xa7\xa8\xff\x39\x12\xb5\x34\x7a\x99\xda\xf7\xcf\x90\xaa\x8f\x0d\x7b\x62\xc1\x1f\xfe\x00\x47\xb3\xfb\x30\x8e\x63\xf8\x1b\xa3\x6a\x5b\x08\xd7\x22\x70\x9d\x81\x7e\x7d\xc5\x8d\x71\x35\xb7\x81\x42\x49\x6c\xf7\x7c\xda\xb5\x7f\x24\x63\xbb\x0c\xe6\x30\x3d\x14\x90\xae\xc3\x41\x58\x38\x11\x2d\x06\x74\xf7\x03\xc1\xd9\x76\xc8\x6f\x6f\x27\xaf\x10\xbe\x4a\x21\x08\x86\x9b\x8f\x56\xd0\x82\x9e\xd8\x99\x41\xfb\xde\xdb\x62\xdc\x46\xc7\x53\xb1\x6b\x72\x0e\x57\xd3\xe9\x74\x72\x24\xc4\x76\xa7\xde\xd7\x35\x25\x4d\xc0\xe4\xc6\x5d\x89\xbd\x6e\x5d\xda\x48\x09\x10\x5d\x69\x02\x72\x25\x84\xcf\x59\xda\xad\xa4\xe0\xb6\x47\x92\x42\x78\x71\x73\x22\x8a\x0e\x34\x39\x38\xda\xa1\x79\x4e\xe8\xfe\xd0\x44\xfb\x3a\x3b\x58\x1c\x5e\xec\x19\x65\xcf\x5e\xa7\x0d\x73\xd6\xcb\xcd\x77\x1a\x3d\x30\xd7\xce\x5e\x87\x3a\x1b\xc8\xef\xe9\x3c\xbf\xf8\xc8\x63\xf4\xd3\x75\x63\xca\xf1\x81\xa0\x93\x9b\x63\xdb\xbc\xb5\xa8\x29\x47\x56\x14\xb2\xc8\x16\x54\x04\x68\x3c\x32\x89\x4b\xd4\x35\x86\x1a\x65\x81\xba\x4b\x29\x7c\x5e\x4f\x09\xe0\x9e\xc9\x7c\x3d\x39\x84\xd3\xe0\x44\x47\xba\xbd\x01\x0e\x73\x4a\xf3\x80\x87\xe1\xe0\x2c\x2e\x2f\x53\x12\x01\x00\x0e\x3c\xc1\xa1\x75\x0f\xae\xb4\x18\x05\xab\x0d\x16\x90\x82\xff\x95\x7b\x3c\x89\x1a\xc9\xef\xc6\x93\xb0\x7d\x3f\xa4\xd1\xcd\xdf\xf4\x55\x62\x27\xfb\xf3\x14\x82\xc4\x6a\xe0\x45\x3a\x0a\xe0\xf9\x29\x3f\xa4\xd0\x3b\x9a\xef\x24\x18\x6e\x05\x48\x6c\x31\x77\x0d\x4f\x5f\xae\xfd\x3d\xc8\x58\x7e\xbb\x74\xb5\xd0\x8c\xf2\xad\xf1\x11\x59\xb6\x62\x96\x69\x47\x75\x72\x03\xbb\xe5\x6d\x9d\x98\x93\x85\x6e\xc0\x17\xa4\xae\xaf\x0a\xfd\x0f\x11\xee\x2d\x53\xba\x40\x1d\x6a\x56\xf0\xc6\xcc\xe0\x45\x7d\x77\xf3\xf7\xee\x87\x1a\xd7\xfd\x7d\x54\xd4\x5a\xe3\xfc\x48\xa2\xb6\xa3\xf8\x1c\x82\x24\xa6\x05\xbf\x47\xa6\x3f\xec\xf0\xd7\x75\x38\xd1\xe3\x86\xfe\xb7\xef\x76\xbc\xe2\x45\x21\x90\x04\xde\x91\x27\x8f\x24\xfb\x0f\xfd\x6a\x9f\x25\xb4\xcd\xed\xdd\x9e\x2d\xa0\x30\xf8\xc8\x86\xbe\x4f\x3e\x22\x00\x84\x74\x64\xee\x74\xde\xd6\xda\x6e\x58\x8f\x9c\x2e\xda\x6f\x25\x8a\x46\xbb\x84\x6b\x1c\xb6\x00\x3b\x87\x91\xa1\x04\xb0\x30\xa3\x49\x54\x36\x15\x93\xfc\x37\x1c\x53\x70\x9a\x78\x5d\xb9\xc6\x7b\x70\x7c\x2f\x1f\x09\xb3\xeb\x88\x8f\xba\x40\x37\x6a\x95\x38\xea\xac\xfb\x62\x57\xda\xcf\x60\x7a\x33\xfa\x44\x0d\x9d\xe6\x12\x66\x4c\xc3\xf0\x25\xec\x22\x30\x68\x45\xdc\xbb\xb9\x8c\xe9\x91\x6f\x64\xb8\x24\x5d\xaa\x75\x3a\xba\x9a\xf6\x42\x7a\x43\x3b\x3b\x8f\x5a\xac\x1d\x19\x83\xa4\xec\x5c\x73\x0e\x57\xd3\x2f\x21\xad\x6f\x86\x1c\x9c\xc0\x6a\x5e\x63\x01\x2c\xb7\x7c\x85\xff\x0f\x07\xf9\x02\x4a\xfe\x64\x11\x09\x87\x9d\xf2\x1c\x4c\xf7\xe4\xa5\xd9\x5e\xb7\xff\x4a\xfe\x06\xb1\xd3\xf0\x73\x08\x4e\x1e\xe4\x41\x24\x1e\x2c\x3c\x70\xed\x87\xfd\xde\xfd\x92\x14\x1c\x06\x16\x4a\x79\xfb\x9f\x40\x27\x51\x69\x2b\x31\x0e\x12\xeb\xbe\x82\x21\x99\x7b\x0a\x8e\x80\x1f\xde\xcf\xeb\xb6\xfb\xd5\x0c\x15\xf1\x78\x50\x6c\xc1\x20\x43\xe9\x0b\xb2\x2e\x1d\x81\xed\xee\x63\xa1\x38\x86\x77\x96\x69\x0b\x0c\x7e\x7c\x0b\x4d\x5d\x30\x4b\x21\x4c\x01\x05\x49\xff\xb3\x48\xf7\x35\x51\xc6\xb4\x81\x85\xd2\x6b\xa6\x8b\xb6\x45\x63\x4b\xdc\xb8\x9f\x6d\xba\xfc\xcf\xa0\x7d\x4b\xb7\xd8\x8a\x89\xf1\x51\xf1\xf7\x74\x3c\x8a\x86\x26\x1f\x4d\x22\x64\x79\x79\xbc\xd0\x45\xac\x9e\x6f\x0a\xdf\xba\x3a\x60\xfc\x74\x6c\x4b\x6e\x26\x11\xb3\x56\x8f\x47\x7b\x60\x18\x4d\xc8\xae\x17\x83\xba\xac\xdf\x9e\xec\xb9\xd5\x63\x34\x76\x19\x75\x9f\x0d\x74\xcb\x73\x63\xc6\x1e\x57\xa3\xf3\x01\xed\x7d\x58\x8d\x9e\x8d\x7a\x43\xed\xdc\x7b\x77\x8e\xf4\xa4\x24\x7b\xa4\x47\xe4\x65\xa3\x23\xf6\xac\x28\xde\x90\xff\x8c\x83\x13\x9e\x7e\x88\x8e\x49\xaf\x6c\x7f\x5f\x3f\xaa\x65\xff\xf1\xc5\x03\x2a\xe6\xc5\x68\x12\x99\x26\xf3\x0d\x8a\xf1\xcb\xbe\x0a\xeb\x96\x39\xf0\x1e\x86\x82\xa3\x84\x82\x58\xec\x27\x15\xe1\x41\x12\xf2\x48\xd4\x68\x59\xfa\x53\x6d\xcf\x49\xe1\xd3\x49\xdf\xdf\xfa\xc6\x50\x86\xe5\xbb\xfe\x6b\xcc\x8c\x6b\x27\x40\x8b\x77\xd7\xd2\xf1\xad\x9b\xd7\xdf\xbf\x1d\xb4\x6f\x7a\x8f\x18\x3b\xea\xfd\x87\x7e\xa7\x9a\x25\x27\xbf\x2c\x5c\xaf\xd7\xd1\x52\xa9\xa5\xf0\xdf\x14\xf6\xdd\x94\x98\xd5\x3c\xfa\x60\x02\x60\x66\x23\x73\x28\x70\x81\x7a\x3e\x20\xdf\xb6\x58\x92\xd8\x7f\xf3\x96\xc4\xfe\xb3\xde\xff\x0b\x00\x00\xff\xff\x49\x98\x33\xa4\xe7\x2b\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
